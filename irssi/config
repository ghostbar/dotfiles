servers = (
  {
    address = "irc.freenode.net";
    chatnet = "FreeNode";
    port = "6697";
    use_ssl = "yes";
    ssl_verify = "no";
    autoconnect = "yes";
  },
  {
    address = "ircs.oftc.net";
    chatnet = "Debian";
    port = "6697";
    use_ssl = "yes";
    ssl_verify = "no";
    autoconnect = "no";
  },
  {
    address = "irc.unplug.org.ve";
    chatnet = "Unplug";
    port = "6667";
    use_ssl = "no";
    ssl_verify = "no";
    autoconnect = "no";
  },
  #  {
  #    address = "irc.debian.org";
  #    chatnet = "Debian";
  #    port = "6667";
  #    use_ssl = "no";
  #    ssl_verify = "no";
  #    autoconnect = "yes";
  #  }
);

chatnets = {
  FreeNode = { type = "IRC"; autosendcmd = ""; };
  Debian = { type = "IRC"; autosendcmd = ""; };
  Unplug = { type = "IRC"; autosendcmd = ""; };
};

channels = (
  {
    name = "##sts,#drupal-contribute,#drupal-themes,#open_atrium";
    chatnet = "freenode";
    autojoin = "yes";
  },
  { name = "#debian-perl"; chatnet = "Debian"; autojoin = "yes"; },
  { name = "#unplug"; chatnet = "unplug"; autojoin = "yes"; }
);

aliases = {
  J = "join";
  WJOIN = "join -window";
  WQUERY = "query -window";
  LEAVE = "part";
  BYE = "quit";
  EXIT = "quit";
  SIGNOFF = "quit";
  DESCRIBE = "action";
  DATE = "time";
  HOST = "userhost";
  LAST = "lastlog";
  SAY = "msg *";
  WI = "whois";
  WII = "whois $0 $0";
  WW = "whowas";
  W = "who";
  N = "names";
  M = "msg";
  T = "topic";
  C = "clear";
  CL = "clear";
  K = "kick";
  KB = "kickban";
  KN = "knockout";
  BANS = "ban";
  B = "ban";
  MUB = "unban *";
  UB = "unban";
  IG = "ignore";
  UNIG = "unignore";
  SB = "scrollback";
  UMODE = "mode $N";
  WC = "window close";
  WN = "window new hide";
  SV = "say Irssi $J ($V) - http://irssi.org/";
  GOTO = "sb goto";
  CHAT = "dcc chat";
  RUN = "SCRIPT LOAD";
  UPTIME = "eval exec - expr `date +%s` - \\$F | awk '{print \"Irssi uptime: \"int(\\\\\\$1/3600/24)\"d \"int(\\\\\\$1/3600%24)\"h \"int(\\\\\\$1/60%60)\"m \"int(\\\\\\$1%60)\"s\" }'";
  CALC = "exec - if which bc &>/dev/null\\; then echo '$*' | bc | awk '{print \"$*=\"$$1}'\\; else echo bc was not found\\; fi";
  SBAR = "STATUSBAR";
  INVITELIST = "mode $C +I";
  Q = "QUERY";
  "MANUAL-WINDOWS" = "set use_status_window off;set autocreate_windows off;set autocreate_query_level none;set autoclose_windows off;set reuse_unused_windows on;save";
  EXEMPTLIST = "mode $C +e";
  ATAG = "WINDOW SERVER";
};

statusbar = {
  # formats:
  # when using {templates}, the template is shown only if it's argument isn't
  # empty unless no argument is given. for example {sb} is printed always,
  # but {sb $T} is printed only if $T isn't empty.

  items = {
    # start/end text in statusbars
    barstart = "{sbstart}";
    barend = "{sbend}";

    topicbarstart = "{topicsbstart}";
    topicbarend = "{topicsbend}";

    # treated "normally", you could change the time/user name to whatever
    time = "{sb $Z}";
    user = "{sb {sbnickmode $cumode}$N{sbmode $usermode}{sbaway $A}}";

    # treated specially .. window is printed with non-empty windows,
    # window_empty is printed with empty windows
    window = "{sb $winref:$itemname{sbmode $M}}";
    window_empty = "{sb $winref{sbservertag $tag}}";
    prompt = "{prompt $[.15]itemname}";
    prompt_empty = "{prompt $winname}";
    topic = " $topic";
    topic_empty = " Irssi v$J - http://irssi.org/help/";

    # all of these treated specially, they're only displayed when needed
    lag = "{sb Lag: $0-}";
    act = "{sb Act: $0-}";
    more = "-- more --";
  };

  # there's two type of statusbars. root statusbars are either at the top
  # of the screen or at the bottom of the screen. window statusbars are at
  # the top/bottom of each split window in screen.
  default = {
    # the "default statusbar" to be displayed at the bottom of the window.
    # contains all the normal items.
    window = {
      disabled = "no";

      # window, root
      type = "window";
      # top, bottom
      placement = "bottom";
      # number
      position = "1";
      # active, inactive, always
      visible = "active";

      # list of items in statusbar in the display order
      items = {
        barstart = { priority = "100"; };
        time = { };
        user = { };
        window = { };
        window_empty = { };
        lag = { priority = "-1"; };
        act = { priority = "10"; };
        more = { priority = "-1"; alignment = "right"; };
        barend = { priority = "100"; alignment = "right"; };
      };
    };

    # statusbar to use in inactive split windows
    window_inact = {
      type = "window";
      placement = "bottom";
      position = "1";
      visible = "inactive";
      items = {
        barstart = { priority = "100"; };
        window = { };
        window_empty = { };
        more = { priority = "-1"; alignment = "right"; };
        barend = { priority = "100"; alignment = "right"; };
      };
    };

    # we treat input line as yet another statusbar :) It's possible to
    # add other items before or after the input line item.
    prompt = {
      type = "root";
      placement = "bottom";
      # we want to be at the bottom always
      position = "100";
      visible = "always";
      items = {
        prompt = { priority = "-1"; };
        prompt_empty = { priority = "-1"; };
        # treated specially, this is the real input line.
        input = { priority = "10"; };
      };
    };

    # topicbar
    topic = {
      type = "root";
      placement = "top";
      position = "1";
      visible = "always";
      items = {
        topicbarstart = { priority = "100"; };
        topic = { };
        topic_empty = { };
        topicbarend = { priority = "100"; alignment = "right"; };
      };
    };
  };
};
settings = {
  core = {
    real_name = "Jose Luis Rivas";
    user_name = "ghostbar";
    nick = "ghostbar";
    use_proxy = "no";
    proxy_port = "3128";
    proxy_address = "joseluis.rivas:G4rb4g3c0ll3c70r@150.187.65.3";
    proxy_string = "CONNECT %s:%d";
    proxy_password = "";
    proxy_string_after = "";
  };
  "fe-text" = { term_force_colors = "no"; actlist_sort = "refnum"; };
  "irc/core" = { skip_motd = "yes"; };
  "fe-common/core" = {
    timestamps = "yes";
    completion_auto = "yes";
    theme = "default";
    autolog = "yes";
    bell_beeps = "yes";
    beep_msg_level = "HILIGHT MSGS";
    beep_when_away = "no";
    beep_when_window_active = "yes";
  };
  proxy = { irssiproxy_password = "  "; };
  "perl/core/scripts" = {
    beep_cmd = "play -q /usr/share/sounds/freedesktop/stereo/complete.oga > /dev/null 2>&1 &";
  };
};
hilights = (
  { text = "ghostbar"; nick = "yes"; word = "yes"; },
  { text = "ghostbar_"; nick = "yes"; word = "yes"; }
);
ignores = ( );
logs = { };
