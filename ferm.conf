# Ferm.conf by Jose Luis Rivas <ghostbar at debian.org>
# Based on http://wiki.debian.org/ferm

# Chain policies
domain (ip ip6) {
 table filter {
  chain (INPUT FORWARD) policy DROP;
  chain OUTPUT policy ACCEPT;
 }
}

# loopback
domain (ip ip6) table filter {
 chain INPUT interface lo ACCEPT;
 chain OUTPUT outerface lo ACCEPT;
}

# Accept ICMP (kernel does rate-limiting)
domain ip table filter chain (INPUT OUTPUT) protocol icmp ACCEPT;
domain ip6 table filter chain (INPUT OUTPUT) protocol icmpv6 ACCEPT;

# DROP invalid packages
domain (ip ip6) table filter chain INPUT mod state state INVALID DROP;

# Allow DHCP client to work
domain (ip ip6) table filter chain INPUT protocol udp sport 67 dport 68 ACCEPT;
domain ip6 table filter chain INPUT protocol (tcp udp) sport 546 dport 547 ACCEPT;

# ACCEPT established/related connections
domain (ip ip6) table filter chain (INPUT OUTPUT) mod state state (ESTABLISHED RELATED) ACCEPT;

# Allow no more than 8 ssh attempts from a source ip in 5 minutes
domain (ip ip6) table filter chain INPUT {
 protocol tcp dport ssh @subchain {
  mod recent name SSH {
   set NOP;
   update seconds 300 hitcount 8 @subchain {
    LOG log-prefix "Blocked-ssh: " log-level warning;
    DROP;
   }
  }
  ACCEPT;
 }
}

# Allow HTTP/HTTPS from everywhere
domain (ip ip6) table filter chain INPUT {
	protocol tcp dport (http https) ACCEPT;
}

# Allow OpenVPN from everywhere
domain (ip ip6) table filter chain INPUT {
	protocol (tcp udp) dport openvpn ACCEPT;
}

# Allow dev stages from local IP's, 10.0.0.0/16 and 192.168.0.0/16
domain ip table filter chain INPUT {
	saddr (192.168/16 10/16) protocol (tcp udp) dport 3000:5000 ACCEPT;
}

# Allow FORWARD to 192.168.105.0 and 10.0.0.0 for sharing the internet
domain ip table nat {
	chain PREROUTING ACCEPT;
	chain POSTROUTING ACCEPT;
	chain POSTROUTING outerface ppp0 MASQUERADE;
}
domain ip table filter {
	chain INPUT {
		saddr 192.168.105.0 interface eth0 ACCEPT;
		saddr 10.0.0.0 interface wlan0 ACCEPT;
	}
}
domain ip table filter chain FORWARD {
	interface ppp0 outerface eth0 mod state state (RELATED ESTABLISHED) ACCEPT;
	interface eth0 outerface ppp0 ACCEPT;
	interface wlan0 outerface ppp0 ACCEPT;
}

# FORWARD chain REJECT
domain (ip ip6) table filter chain FORWARD {
	LOG log-prefix "FORWARD-rejected: " log-level debug;
	REJECT;
}

# Log all other INPUT
domain (ip ip6) table filter chain INPUT {
 mod limit limit 3/min limit-burst 10 LOG log-prefix "INPUT-rejected: " log-level debug;
 REJECT;
}
